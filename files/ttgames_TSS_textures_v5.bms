# script for converting textures into dds for Lego Skywalker Saga (.TEXTURE and .NXG_TEXTURES files)
# version v5 (fixed), created by spiritovod

get EXT extension
if EXT == "NXG_TEXTURES"
	endian big
	get HEADER long
	goto HEADER
	findloc OFFSET binary "\x00\x01\x00\x00" 0 ""
	math OFFSET - 17
	goto OFFSET
	get TEXTURES byte
	
	math FILES = 0
	for i = 0 < TEXTURES
		get CHECK long
		getdstring HASH 12 # the rest of hash 
		if CHECK != 0
			math FILES + 1
			get VERSION long
			get NAMEZ byte
			getdstring NAME NAMEZ
			putarray NAMES FILES NAME
			getdstring FLAGS 9
		else
			get VERSION byte
			get NAMEZ byte
			getdstring NAME NAMEZ
			getdstring FLAGS 12
		endif
	next i
	
	savepos OFFSET
	for i = 1 <= FILES
		get DUMMY byte
		getarray NAME NAMES i
		string NAME % "."		# comment for original "nut" extension
		string NAME + ".dds"	# comment for original "nut" extension
		#string NAME ! "/"		# uncomment to strip full path and leave filename only
		if i != FILES
			findloc END string "DDS" 0 ""
		else 
			get END asize
		endif
		xmath SIZE "END - OFFSET" 
		log NAME OFFSET SIZE
		math OFFSET + SIZE
		goto OFFSET
	next i
	cleanexit
	
elif EXT != "TEXTURE"
	cleanexit
endif

set MEMORY_FILE binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x05\x00\x00\x00\x44\x58\x54\x31\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
set MEMORY_FILE2 binary "\x44\x44\x53\x20\x7C\x00\x00\x00\x07\x10\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00\x04\x00\x00\x00\x44\x58\x31\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x63\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00"

get NAME basename
string NAME + ".dds"

endian big
get HEADER long
goto HEADER
getdstring DUMMY 20
get VERSION long
get WIDTH long
get HEIGHT long
getdstring FLAGS 12 # probably mips + other flags
get TYPE long
if VERSION = 0xE	# skip rest of header
	getdstring DUMMY 21
elif VERSION = 0xF
	getdstring DUMMY 37
elif VERSION = 0x10
	getdstring DUMMY 38
elif VERSION = 0x11
	getdstring DUMMY 42
elif VERSION = 0x12 || VERSION = 0x13
	getdstring DUMMY 46
elif VERSION = 0x14
	getdstring DUMMY 48
else
	continue exit_here
endif
savepos OFFSET
get SIZE asize
math SIZE - OFFSET

if TYPE == 1 || TYPE == 2 || TYPE == 0x1F
elif TYPE == 6
	putVarChr MEMORY_FILE 0x57 0x35
elif TYPE == 0x1E
	putVarChr MEMORY_FILE2 0x80 0x5F
elif TYPE = 0x25
	putVarChr MEMORY_FILE 0x54 0x41
	putVarChr MEMORY_FILE 0x55 0x54
	putVarChr MEMORY_FILE 0x56 0x49
else
	continue exit_here
endif

endian little
if TYPE == 0x1F || TYPE == 0x1E
	putVarChr MEMORY_FILE2 0xC HEIGHT long
	putVarChr MEMORY_FILE2 0x10 WIDTH long
else
	putVarChr MEMORY_FILE 0xC HEIGHT long
	putVarChr MEMORY_FILE 0x10 WIDTH long
endif

append
if TYPE == 0x1F || TYPE == 0x1E
	log MEMORY_FILE2 OFFSET SIZE
	math MEM_FILE = -2
else
	log MEMORY_FILE OFFSET SIZE
	math MEM_FILE = -1
endif
append
get SIZE asize MEM_FILE
log NAME 0 SIZE MEM_FILE
cleanexit

exit_here: 
print "This format is not supported!"
